# Grammar reference for Nord. Documented in roughly BNF.
program         -> statement_list ;

statement_block -> "{" statement_list "}"
statement_list  -> statement
                 | statement statement_list;


# Statements
statement       -> variable_decl
                 | expression "\n"
                 | function_decl ;
function_decl   -> "fn" ( IDENTIFIER )? ( "(" expression_list ")" )* statement_block
variable_decl   -> "var" IDENTIFIER ( "=" expression ) "\n" ;

# Expressions
expression_list -> expression ( "," expression_list )* ;
expression      -> assignment ;
assignment      -> IDENTIFIER "=" assignment
                 | equality ;
equality        -> comparison ( ( "!=" | "==") comparison )* ;
comparison      -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term            -> term_md ( ( "-" | "+" ) term_md )* ;
term_md         -> unary ( ( "/" | "*" ) unary )*  ;
unary           -> ( "!" | "-" ) unary
                 | primary ;
primary         -> function_call
                 | IDENTIFIER | NUMBER | FLOAT | STRING | "true" | "false" | "nil"
                 | "(" expression ")" ;
function_call   -> IDENTIFIER "(" ( expression_list )* ")" ;