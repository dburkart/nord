    _   __                  __
   / | / /____   _____ ____/ /
  /  |/ // __ \ / ___// __  /
 / /|  // /_/ // /   / /_/ /
/_/ |_/ \____//_/    \__,_/


Nord is a personal experiment in language design and compiler construction. I
don't know where this is going yet, but it should be fun!

Current State of the Project
===============================================================================
Last Updated: 06/17/2021

Currently, a small subset of the planned language is implemented and working.
There is support for basic expressions, including arithmetic and comparisons,
as well as function call support. Beyond the fact that syntax is minimal, the
following known limitations exist:

 - Register allocation is not that sophisticated. In fact, full support for
   spilling / unspilling variables to main memory doesn't exist (function calls
   spill variables, but only using the stack). This means that sufficiently
   large scripts with enough variables in the same scope will most likely
   result in undefined behavior.

 - Only partial error-handling exists. There are many edge cases which are
   not handled correctly, resulting in asserts and seg faults for some classes
   of syntax or semantic errors.
   
 - No builtins yet. This means that although we can run scripts we can't, for
   example, print any output! That is why the nord binary still dumps the VM
   after execution.
   
 - Function support is implemented, but it's still pretty basic. Scoping is
   not fullly implemented, although we're almost there.


Building
===============================================================================

To build the project, run:

    make

Doing so will produce a binary, "nord" which can then be run. What that binary
does will eventually be to run nord scripts, but it may do something else until
we have all subsystems up and running.

Testing
===============================================================================

To test things, run:

    make test

